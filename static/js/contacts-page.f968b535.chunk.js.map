{"version":3,"sources":["components/HookForm/HookForm.module.scss","components/ContactsList/ContactList.module.css","components/AddTodoButton/AddTodoButton.module.scss","components/Filter/Filter.module.scss","components/AddTodoButton/AddTodoButton.jsx","components/HookForm/HookForm.jsx","components/Filter/Filter.jsx","assets/icons/delete.svg","components/ContactsList/ContactListItem.jsx","components/ContactsList/ContactsList.jsx","views/ContactsPage/ContactsPage.jsx"],"names":["module","exports","AddTodoButton","className","styles","button__wrapper","type","button","initialState","name","number","connect","state","contacts","contactsSelectors","getContacts","isLoading","getLoading","dispatch","onSubmit","contactsOperations","addContact","useState","setState","handleChange","event","currentTarget","value","prev","resetForm","form","preventDefault","normalizedName","toLowerCase","nameInContacts","find","contact","numberInContacts","toast","warning","HeaderWrapper","TextField","label","onChange","pattern","title","disabled","required","Filter","container","defaultProps","_path","_path2","getFilter","contactsActions","changeFilter","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgDelete","_ref","svgRef","titleId","props","xmlns","viewBox","ref","id","d","fill","ForwardRef","ContactListItem","onDelete","List__item","List__button","onClick","width","height","getfilteredContacts","deleteContact","TodoList","map","ContactsPage","isLoadingContacts","useSelector","useDispatch","useEffect","fetchContacts","Loader"],"mappings":"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","file":"static/js/contacts-page.f968b535.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"HookForm_Wrapper__2dABZ\",\"HeaderWrapper\":\"HookForm_HeaderWrapper__13XqK\",\"form\":\"HookForm_form__1_aEP\",\"label\":\"HookForm_label__53JkJ\",\"text\":\"HookForm_text__3d4R6\",\"input\":\"HookForm_input__2oYiD\",\"container\":\"HookForm_container__2rEuy\",\"button\":\"HookForm_button__2sq8s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List__item\":\"ContactList_List__item__cb-bU\",\"List__button\":\"ContactList_List__button__1fIzU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button__wrapper\":\"AddTodoButton_button__wrapper__17geQ\",\"button\":\"AddTodoButton_button__26Fmx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Filter_Wrapper__37Kfv\",\"HeaderWrapper\":\"Filter_HeaderWrapper__3RisP\",\"title\":\"Filter_title__3Gog_\",\"container\":\"Filter_container__2rk4Q\"};","import styles from './AddTodoButton.module.scss';\n\nconst AddTodoButton = () => (\n    // button__обгортка\n  <div className={styles.button__wrapper}>\n    <button type=\"submit\" className={styles.button}>\n      Add contact\n    </button>\n  </div>\n);\n\nexport default AddTodoButton;","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from \"@material-ui/core/TextField\";\nimport { toast } from 'react-toastify';\nimport { connect } from 'react-redux'; // Імпорт функції коннекта до сховища\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts'; // Імпорт операції додавання контакта і селектора усіх контактів\nimport AddTodoButton from '../AddTodoButton';\nimport styles from './HookForm.module.scss';\n\n\n\nconst initialState = {\n  name: '',\n  number: '',\n};\n\n// Компонент форми додавання контакта\nconst HookForm = ({ contacts, isLoading, onSubmit }) => {\n  const [state, setState] = useState(initialState);\n  const { name, number } = state;\n\n\n  // Слідкує за інпутом\n// eslint-disable-next-line\nconst handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    setState(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  // Метод на відправці форми. Формує зі стейта контакт і передає у зовнішній метод\nconst handleSubmit = event => {\n    event.preventDefault();\n\n    const normalizedName = name.toLowerCase();\n\n    // Перевірка на дублікат по імени\n    const nameInContacts = contacts.find( \n      contact => contact.name === normalizedName,\n\n    );\n\n    // Перевірка на дублікат по номеру\n    const numberInContacts = contacts.find(\n      contact => contact.number === number,\n    );\n\n    // Відправка імени і номера післе перевірки (в проп-метод з контейнера)\n    if (!nameInContacts && !numberInContacts) {\n      onSubmit(normalizedName, number);\n      resetForm();\n      return;\n    }\n\n    toast.warning(`${name} is already in contacts`);\n  };\n\n  // Скинення полів форми (посля відтправки)\n  const resetForm = () => {\n    setState(initialState);\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n    {/* <form className={styles.form} onSubmit={() => this.handleIncrement({})}> */}\n      \n      {/* <label className={styles.label}>\n        <span className={styles.label__text}>Name</span>\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Contact name\"\n          aria-label=\"Input for your name\"\n          className={styles.input}\n          value={name} // Пишет значение в локальный стейт\n          onChange={hanldeChange} // Наблюдающий метод\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          disabled={isLoading}\n          required\n        />\n      </label> */}\n\n        < div className={styles.HeaderWrapper}>\n          {/* <h3>Find contacts by name</h3> */}\n          <TextField\n          label = \"Name\"       // Фільтрувати:  placeholder=\"Contact name\"\n          onChange={handleChange}  //{() => handleChange({})}\n          value={name}                   //{this.state.name}\n          // className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          disabled={isLoading}\n          required\n          />\n        </div>\n\n      {/* <label className={styles.label}>\n        <span className={styles.label__text}>Number</span>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Phone number\"\n          aria-label=\"Input for your phone number\"\n          className={styles.input}\n          value={number} // Пишет значение в локальный стейт\n          onChange={hanldeChange} // Наблюдающий метод\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          disabled={isLoading}\n          required\n        />\n      </label> */}\n\n      <div className={styles.HeaderWrapper}>\n          <TextField\n            label = \"Number\"       // Фільтрувати\n            onChange={handleChange}  //{() => handleChange({})}\n            value={number}\n            type=\"tel\"\n            // className={styles.input}\n            name=\"number\"\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            disabled={isLoading}\n            required\n          />\n        </div>     \n\n      <AddTodoButton />\n    </form>\n  );\n};\n\n\n// З глобального стейта в пропи компонента HookForm\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getContacts(state),\n  isLoading: contactsSelectors.getLoading(state),\n});\n\n// Операції в пропи компонента HookForm\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n    dispatch(contactsOperations.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HookForm);\n\n\n\nHookForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  isLoading: PropTypes.bool.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\n\n","import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.scss';\nimport TextField from \"@material-ui/core/TextField\";\nimport { contactsSelectors, contactsActions } from '../../redux/contacts';\n\n// Компонент фільтра \nconst Filter = ({ value, isLoading, onChange }) => {\n  \n  return (\n  <div className={styles.container}>\n    <h2 className={styles.title}>Contacts</h2>\n\n    {/* <label className={styles.label}>\n      <span className={styles.label__text}>Searches by name</span>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Find\"\n        className={styles.input}\n        value={value}\n        onChange={onChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Find contacts by name\"\n        disabled={isLoading}\n        required\n      />\n    </label> */}\n\n        <div className={styles.HeaderWrapper}>\n          <TextField\n            value={value}        \n            onChange={onChange}        \n            label=\"Searches by name\"       // Фільтрувати  \n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            //disabled={isLoading}\n            required\n          />\n        </div>\n\n  </div>\n)};\n\nFilter.defaultProps = {\n  value: '',\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  isLoading: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n//export default Filter;\n\n\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state),\n  //isLoading: contactsSelectors.getLoading(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event =>\n    dispatch(contactsActions.changeFilter(event.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n ","var _path, _path2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDelete(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDelete);\nexport default __webpack_public_path__ + \"static/media/delete.5575697b.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ReactComponent as DeleteIcon } from '../../assets/icons/delete.svg';\r\nimport styles from \"./ContactList.module.css\";   // styles from   *.module.css\r\n\r\nconst ContactListItem = ({ name, number, onDelete }) => {   //({ contact, onDelete })\r\n  \r\n  return (\r\n    <li className={styles.List__item}>\r\n      {/* {\"• \" + name + \":   \" + number} \r\n      <button className={styles.List_button}\r\n              type=\"button\"\r\n              name=\"delete\"\r\n              onClick={onDelete}\r\n      >\r\n          Delete\r\n      </button> */}\r\n      {\"•   \" + name + \":    \" + number + \"    \" }\r\n      {/* <span className={styles.name}>{name}</span>\r\n      <a href={`tel:${number}`} className={styles.number}>\r\n      {contact.number}\r\n      </a> */}\r\n      <button className={styles.List__button}\r\n              type=\"button\"\r\n              name=\"delete\"\r\n              onClick={() => onDelete()}\r\n      >                      \r\n        Delete\r\n        <DeleteIcon width=\"20px\" height=\"20px\" fill=\"#a7a1a1\" />\r\n      </button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default  ContactListItem;\r\n\r\n\r\n// ContactListItem.propTypes = {\r\n//   name: PropTypes.string.isRequired,\r\n//   number: PropTypes.string.isRequired,\r\n//   onDelete: PropTypes.func.isRequired\r\n// };\r\n\r\nContactListItem.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n","import { connect } from 'react-redux';\n// import PropTypes from 'prop-types';\nimport contactsOperations from '../../redux/contacts/contacts-operations';\nimport contactsSelectors from '../../redux/contacts/contacts-selectors';\nimport styles from './ContactList.module.css';  //styles from \n//import styled from 'styled-components'\n\nimport ContactListItem from './ContactListItem';\n\n\nconst ContactsList = ({ contacts, onDelete }) => {\n  return (\n    <ul className={styles.TodoList}>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}       //{contact.id}\n          name={name}\n          number={number}\n          //contact={contact}\n          onDelete={() => onDelete(id)}\n        />\n        // <li key={id} className={styles.list}>\n        //   <div className={styles.buttonContainer}>\n        //     <button className={styles.delete} onClick={() => onDelete(id)}>\n        //       -\n        //     </button>\n        //   </div>\n        //   <div>\n        //     <p className={styles.name}>{name} </p>\n        //     <span className={styles.number}>{number}</span>\n        //   </div>\n        // </li>\n      ))}\n    </ul>\n  );\n};\n// const List = styled.ul`\n//   width: 500px;\n// `;\n\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getfilteredContacts(state),   //getInputContacts(state), getContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(contactsOperations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n\n\n\n// ContactsList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.string.isRequired,\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//     }),\n//   ),\n//   onDelete: PropTypes.func.isRequired,\n// };\n\n\n\n\n\n\n\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n//                                                            import Alert from '@material-ui/lab/Alert';\n\nimport HookForm from '../../components/HookForm';\nimport Filter from '../../components/Filter';\nimport ContactsList from '../../components/ContactsList';\nimport Loader from '../../components/Loader';\n\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\n\n// Компонент сторінки контактів\nconst ContactsPage = () => {\n  const isLoadingContacts = useSelector(state =>\n    contactsSelectors.getLoading(state),\n  );\n  //                                                          const isError = useSelector(state => contactsSelectors.getError(state));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <HookForm />\n\n      <Filter />\n\n      <ContactsList />\n\n      {isLoadingContacts && <Loader />}\n\n      {/*                                                     {isError && <Alert severity=\"error\">{isError}</Alert>} */}\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"sourceRoot":""}