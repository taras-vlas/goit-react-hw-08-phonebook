{"version":3,"sources":["routes.js","redux/user/index.js","redux/user/operations.js","components/UserMenu/UserMenuStyles.jsx","components/UserMenu/index.jsx","components/PrivateRoute.jsx","components/PublicRoute.jsx","components/Content/index.jsx","App.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["Routes","path","label","component","lazy","exact","isProtected","createSlice","name","initialState","email","token","isLoggedOn","isLoading","isAuthorized","error","reducers","fetchRegisterRequest","state","fetchRegisterSuccess","action","payload","user","fetchRegisterError","message","fetchLoginRequest","fetchLoginSuccess","fetchLoginError","fetchLogoutRequest","fetchLogoutSuccess","fetchLogoutError","fetchUserRequest","fetchUserSuccess","fetchUserError","fetchUserCancel","actions","reducer","axios","defaults","baseURL","setToken","headers","common","useStyles","createUseStyles","menu","link","color","container","display","justifyContent","button","width","height","active","UserMenu","classes","dispatch","useDispatch","useSelector","React","useState","anchorEl","setAnchorEl","handleClose","className","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","map","isNotLoggedOn","checkShowPage","MenuItem","activeClassName","to","getState","post","then","catch","toast","variant","PrivateRoute","props","PublicRoute","Content","fallback","type","timeout","Component","App","useEffect","get","data","tokenPersistConfig","key","storage","userReducer","persistReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","rootReducer","devTools","process","persistor","persistStore","options","position","positions","BOTTOM_CENTER","offset","transition","transitions","SCALE","Root","template","AlertTemplate","loading","render","document","getElementById"],"mappings":"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","file":"static/js/main.b89f51ed.chunk.js","sourcesContent":["import { lazy } from \"react\";\n\nconst ContactsPage = lazy(() =>\n  import(\"./pages/ContactsPage\" /* webpackChunkName: \"contacts-page\" */)\n);\n\n// const LoginPage = lazy(() =>\n//   import(\"./pages/LoginPage\" /* webpackChunkName: \"login-page\" */)\n// );\n\n// const RegisterPage = lazy(() =>\n//   import(\"./pages/RegisterPage\" /* webpackChunkName: \"register-page\" */)\n// );\n\nconst Routes = [            //Тут для маршрута встановлюються атрибути:\n  {\n    path: \"/contacts\",       //Спрацьовує (маршурт)путь \"/contact\"  та обробляється Компонентою  ContactsPage\n    label: \"Contacts Page\",\n    component: ContactsPage,\n    exact: true,\n    isProtected: true,\n  },\n  // {\n  //   path: \"/login\",          //Спрацьовує (маршурт)путь \"/contact\"  та обробляється Компонентою  LoginPage\n  //   label: \"Login\",\n  //   component: LoginPage,\n  //   isProtected: false,\n  //   isNotLoggedOn: true,\n  // },\n  // {\n  //   path: \"/register\",\n  //   label: \"Register\",\n  //   component: RegisterPage,\n  //   isProtected: false,\n  //   isNotLoggedOn: true,\n  // },\n];\n\n// const Routes = {\n//   \"/contacts\": () => <ContactsPage />,\n//   \"/login\": () => <LoginPage />,\n//   \"/register\": () => <RegisterPage />,\n// };\n\nexport default Routes;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  email: \"\",\n  name: \"\",\n  token: \"\",\n  isLoggedOn: false,\n  isLoading: true,\n  isAuthorized: true,\n  error: \"\",\n};\n\nconst { actions, reducer } = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    fetchRegisterRequest: (state) => {\n      state.isLoading = true;\n    },\n    fetchRegisterSuccess: (state, action) => {\n      state.name = action.payload.user.name;\n      state.email = action.payload.user.email;\n      state.token = action.payload.token;\n      state.isLoggedOn = false;\n      state.isLoading = false;\n    },\n    fetchRegisterError: (state, action) => {\n      state.error = action.payload.message;\n      state.isLoading = false;\n    },\n    fetchLoginRequest: (state) => {\n      state.isLoading = true;\n    },\n    fetchLoginSuccess: (state, action) => {\n      state.name = action.payload.user.name;\n      state.email = action.payload.user.email;\n      state.token = action.payload.token;\n      state.isLoggedOn = false;\n      state.isLoading = false;\n    },\n    fetchLoginError: (state, action) => {\n      state.error = action.payload.message;\n      state.isLoading = false;\n    },\n    fetchLogoutRequest: (state) => {\n      state.isLoading = true;\n    },\n    fetchLogoutSuccess: (state, action) => {\n      state.token = \"\";\n      state.name = \"\";\n      state.email = \"\";\n      state.isLoggedOn = false;\n      state.isLoading = false;\n    },\n    fetchLogoutError: (state, action) => {\n      state.error = action.payload;\n      state.isLoading = false;\n    },\n    fetchUserRequest: (state) => {\n      state.isAuthorized = true;\n    },\n    fetchUserSuccess: (state, action) => {\n      state.name = action.payload.name;\n      state.email = action.payload.email;\n      state.isLoggedOn = true;\n      state.isAuthorized = false;\n    },\n    fetchUserError: (state) => {\n      state.isAuthorized = false;\n      state.isLoggedOn = false;\n      state.token = \"\";\n    },\n    fetchUserCancel: (state) => {\n      state.isAuthorized = false;\n    },\n  },\n});\n\nexport const {\n  fetchRegisterRequest,\n  fetchRegisterSuccess,\n  fetchRegisterError,\n  fetchLoginRequest,\n  fetchLoginSuccess,\n  fetchLoginError,\n  fetchLogoutRequest,\n  fetchLogoutSuccess,\n  fetchLogoutError,\n  fetchUserRequest,\n  fetchUserSuccess,\n  fetchUserError,\n  fetchUserCancel,\n} = actions;\nexport default reducer;\n","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport * as actions from \"./index\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com/users\";\n\nconst setToken = (token) => {\n  axios.defaults.headers.common[\"Authorization\"] = token;\n};\n\nexport const register = (payload) => (dispatch, getState) => {\n  dispatch(actions.fetchRegisterRequest());\n\n  axios\n    .post(\"/signup\", payload)\n    .then(({ data }) => {\n      setToken(data.token);\n      dispatch(actions.fetchRegisterSuccess(data));\n    })\n    .catch((error) => {\n      toast.error(error.message);\n      dispatch(actions.fetchRegisterError(error.message));\n    });\n};\n\nexport const login = (payload) => (dispatch, getState) => {\n  dispatch(actions.fetchLoginRequest());\n\n  axios\n    .post(\"/login\", payload)\n    .then(({ data }) => {\n      setToken(data.token);\n      dispatch(actions.fetchLoginSuccess(data));\n    })\n    .catch((error) => {\n      toast.error(error.message);\n      dispatch(actions.fetchLoginError(error.message));\n    });\n};\n\nexport const logout = () => (dispatch, getState) => {\n  dispatch(actions.fetchLogoutRequest());\n\n  axios\n    .post(\"/logout\")\n    .then(() => dispatch(actions.fetchLogoutSuccess()))\n    .catch((error) => {\n      toast.error(error.message);\n      dispatch(actions.fetchLogoutError(error.message));\n    });\n};\n\nexport const getCurrentUser = () => (dispatch, getState) => {\n  const state = getState();\n  const { token } = state.user;\n\n  if (!token) {\n    dispatch(actions.fetchUserCancel());\n    return;\n  }\n\n  dispatch(actions.fetchUserRequest());\n  setToken(token);\n\n  axios\n    .get(\"/current\")\n    .then(({ data }) => dispatch(actions.fetchUserSuccess(data)))\n    .catch((error) => {\n      toast.error(error.message);\n      setToken(\"\");\n      dispatch(actions.fetchUserError(error.message));\n    });\n};\n","import { createUseStyles } from \"react-jss\";\r\n\r\nconst useStyles = createUseStyles({\r\n  menu: {\r\n    // display: \"flex\",\r\n    // flexDirection: \"column\",\r\n    // justifyContent: \"flex-start\",\r\n  },\r\n  link: {\r\n    color: \"green\",\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  button: {\r\n    width: \"150px\",\r\n    height: \"25px\",\r\n  },\r\n  active: {\r\n    color: \"rgb(59, 138, 255)\",\r\n  },\r\n});\r\n\r\n// .Form {\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   padding: 20px;\r\n//   width: 400px;\r\n//   border-radius: 2px;\r\n//   border: 1px solid #464545;\r\n//   margin-bottom: 20px;\r\n// }\r\n\r\n// .Label {\r\n//   display: inline-block;\r\n//   margin-bottom: 16px;\r\n//   width: 200px;\r\n//   font-size: 20px;\r\n//   color: #171718;\r\n//   cursor: pointer;\r\n// }\r\n\r\n// .Input {\r\n//   color: #171718;\r\n//   font: inherit;\r\n//   font-size: 0.9rem;\r\n//   padding: 2px;\r\n//   border-radius: 4px;\r\n//   border: 1px solid #9e9d9d;\r\n//   width: 200px;\r\n//   outline: 0;\r\n// }\r\n// .Input:focus {\r\n//   border: 2px solid blue;\r\n//   box-shadow: 1px 1px 3px 1px rgba(0, 0, 0, 0.2),\r\n//     0px 1px 1px 0px rgba(41, 107, 250, 0.14),\r\n//     0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n// }\r\n\r\n// .Button {\r\n//   display: inline-flex;\r\n//   align-items: center;\r\n//   justify-content: center;\r\n//   color: #000;\r\n//   background-color: #c0d4f5;\r\n//   border: 0;\r\n//   outline: 0;\r\n//   width: 120px;\r\n//   padding: 2px 8px;\r\n//   border-radius: 4px;\r\n//   cursor: pointer;\r\n//   box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\r\n//   font: inherit;\r\n//   text-transform: none;\r\n//   user-select: none;\r\n//   transition: background-color 200ms ease-in-out;\r\n// }\r\n// .Button:hover {\r\n//   box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\r\n//   background-color: rgba(0, 0, 255, 0.87);\r\n// }\r\n\r\n\r\nexport default useStyles;","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport  Routes  from \"../../routes\";\nimport { NavLink } from \"react-router-dom\";\n// import { A } from \"hookrouter\";\nimport Button from \"@material-ui/core/Button\";\nimport { logout } from \"../../redux/user/operations\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport useStyles from \"./UserMenuStyles\";\n\nconst checkShowPage = (isProtected, isLoggedOn, isNotLoggedOn) => {\n  const showProtected = !isProtected || (isProtected && isLoggedOn);\n  const showLoggedOn = !isNotLoggedOn || (isNotLoggedOn && !isLoggedOn);\n\n  return showProtected && showLoggedOn;\n};\n\nconst UserMenu = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const isLoggedOn = useSelector((state) => state.user.isLoggedOn);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogOut = () => dispatch(logout());\n  return (\n    <div className={classes.container}>\n      <Button\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        Open Menu\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        className={classes.menu}\n      >\n        {Routes.map(({ path, exact, label, isProtected, isNotLoggedOn }) => {\n          const showInMenu = checkShowPage(\n            isProtected,\n            isLoggedOn,\n            isNotLoggedOn\n          );\n\n          return (showInMenu\n            ? (\n              // <A href={path} key={path} className={classes.link}>\n              //   {label}\n              // </A>\n              <MenuItem onClick={handleClose}>\n                <NavLink\n                  activeClassName={classes.active}\n                  key={path}\n                  exact={exact}\n                  to={path}\n                >\n                  {label}\n                </NavLink>\n              </MenuItem>\n            )\n            : null\n          );\n        })}\n      </Menu>\n      <Button\n        onClick={handleLogOut}\n        className={classes.button}\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        Logout\n      </Button>\n    </div>\n  );\n};\n\nexport default UserMenu;\n","import { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = (props) => {\n  const isLoggedOn = useSelector((state) => state.user.isLoggedOn);\n\n  return isLoggedOn\n    ? <Route {...props} />\n    : <Redirect to=\"/login\" />;\n};\n\nexport default PrivateRoute;\n","import { useSelector } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\n\nconst PublicRoute = (props) => {\n  const isLoggedOn = useSelector((state) => state.user.isLoggedOn);\n  const { isNotLoggedOn } = props;\n\n  return !isNotLoggedOn || (isNotLoggedOn && !isLoggedOn)\n    ? ( \n      <Route {...props} />\n      ) \n    : null;\n};\n\nexport default PublicRoute;\n","import { Suspense } from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport PrivateRoute from \"../PrivateRoute\";\nimport PublicRoute from \"../PublicRoute\";\nimport  Routes  from \"../../routes\";\n\nimport Spinner from 'react-loader-spinner';\n\nconst Content = () => {\n  return (\n    <div className=\"content\">\n      <Suspense fallback={\n        \n          <Spinner type=\"TailSpin\" color=\"#00BFFF\" height={40} width={40} className=\"Spinner\" timeout={3000} />\n          //<span>Loading ...</span>\n        \n      }>\n        \n        <Switch>\n          {Routes.map(\n            ({\n              path,\n              exact,\n              isProtected,\n              component: Component,\n              isNotLoggedOn,\n            }) =>\n              isProtected ? (\n                <PrivateRoute\n                  key={path}\n                  path={path}\n                  exact={exact}\n                  component={Component}\n                />\n              ) : (\n                <PublicRoute\n                  key={path}\n                  path={path}\n                  exact={exact}\n                  component={Component}\n                  isNotLoggedOn={isNotLoggedOn}\n                />\n              )\n          )}\n        </Switch>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default Content;\n","import \"./App.css\";\n// import { useRoutes } from \"hookrouter\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ToastContainer } from \"react-toastify\";\n// import Routes from \"./routes\";\nimport UserMenu from \"./components/UserMenu\";\nimport Content from \"./components/Content\";\nimport { getCurrentUser } from \"./redux/user/operations\";\nimport \"./App.css\";\n\nconst App = () => {\n  // const routeResult = useRoutes(Routes);\n  const dispatch = useDispatch();\n  const isAuthorized = useSelector((state) => state.user.isAuthorized);\n\n  useEffect(() => {\n    dispatch(getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <div>\n      {isAuthorized ? (\n        <p>isLoading...</p>\n      ) : (\n        <div className=\"body\">\n          <UserMenu />\n          <Content />\n          {/* {routeResult}  */}\n          <ToastContainer />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\n//import phoneBook from \"./phoneBook/reducer\";\nimport user from \"./user\";\n\n// const phoneBookPersistConfig = {\n//   key: \"phoneBook\",\n//   storage,\n//   whitelist: [\"token\"],\n// };\n\n//const phoneBookReducer = persistReducer(phoneBookPersistConfig, phoneBook);\n\nconst tokenPersistConfig = {\n  key: \"token\",\n  storage,\n};\n\nconst userReducer = persistReducer(tokenPersistConfig, user);\n\nexport default combineReducers({\n  //phoneBook: phoneBookReducer,\n  user: userReducer,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport rootReducer from \"./rootReducer\";\nimport logger from \"redux-logger\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","import { BrowserRouter as Router } from \"react-router-dom\";\nimport { render } from \"react-dom\";\nimport { transitions, positions, Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\n\n// optional configuration\nconst options = {\n  // you can also just use 'bottom center'\n  position: positions.BOTTOM_CENTER,\n  timeout: 5000,\n  offset: \"30px\",\n  // you can also just use 'scale'\n  transition: transitions.SCALE,\n};\n\nconst Root = () => (\n  <AlertProvider template={AlertTemplate} {...options}>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Router>\n          <App />\n        </Router>\n      </PersistGate>\n    </Provider>\n  </AlertProvider>\n);\n\nrender(<Root />, document.getElementById(\"root\"));\n"],"sourceRoot":""}