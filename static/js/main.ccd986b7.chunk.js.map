{"version":3,"sources":["redux/auth/auth-actions.js","redux/auth/auth-operations.js","redux/auth/auth-reducer.js","redux/auth/auth-selectors.js","redux/store.js","components/Container/Container.jsx","components/Navigation/Navigation.jsx","components/AuthNav/AuthNav.jsx","components/UserMenu/UserMenu.jsx","components/AuthBar/AuthBar.jsx","components/PrivateRoute.js","components/PublicRoute.js","App.jsx","index.js","routes.js","components/AuthNav/AuthNav.module.scss","components/Navigation/Navigation.module.scss","components/UserMenu/UserMenu.module.scss","components/Loader/Loader.jsx","redux/contacts/contacts-reducer.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/Container/Container.module.scss","components/AuthBar/AuthBar.module.scss","components/Loader/Loader.module.scss"],"names":["registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","authActions","post","data","message","toast","error","logIn","logOut","getCurrentUser","getState","persistedToken","auth","get","initialUserState","name","email","user","createReducer","_","payload","isAuthenticated","combineReducers","getIsAuthenticated","state","getUserEmail","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","Container","children","className","styles","container","defaultProps","connect","authSelectors","list","item","exact","to","routes","HOME","link","activeClassName","CONTACTS","AuthNav","REGISTRATION","LOGIN","mapDispatchToProps","onLogOut","authOperations","profile","thumb","src","alt","title","avatar","welcome","type","aria-label","onClick","button","header","Component","component","redirectTo","routeProps","render","props","restricted","HomePage","lazy","RegistrationPage","ContactsPage","LoginPage","PageNotFound","useEffect","fallback","Loader","path","autoClose","ReactDOM","StrictMode","loading","document","getElementById","module","exports","loader","role","color","width","height","items","actions","fetchContactsSuccess","sort","b","localeCompare","addContactSuccess","deleteContactSuccess","filter","id","changeFilter","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","fetchContacts","addContact","number","contact","success","deleteContact","delete","getFilter","getContacts","console","log","getfilteredContacts","createSelector","normalizedFilter","toLowerCase","includes","getLoading","getError"],"mappings":"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","file":"static/js/main.ccd986b7.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\n// create аctions для отримання реєстрації/register юзера\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\n// create аctions для отримання login юзера\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\n// create аctions для отримання logout юзера\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\n// create аctions для для отримання  поточного юзера\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\n// eslint-disable-next-line\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n\n  loginRequest,\n  loginSuccess,\n  loginError,\n\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport authActions from './auth-actions';\n\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\n\n// Об'єкт токена\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n/* Redux-операции для работы с асинхронными запросами по паттерну request, success и error */\n\n// Redux-Операція реєстрації юзера\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const { data } = await axios.post('/users/signup', credentials);\n\n    token.set(data.token);\n    dispatch(authActions.registerSuccess(data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n    toast.error(error.message);\n  }\n};\n\n// Redux-Операція авторизації юзера\nconst logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n\n    token.set(data.token);\n    dispatch(authActions.loginSuccess(data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n    toast.error(error.message);\n  }\n};\n\n// Redux-Операція виходу з профіля\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n    toast.error(error.message);\n  }\n};\n\n// Redux-Операція отримання поточного користувача (перевірка локального сховища через персист)\nconst getCurrentUser = () => async (dispatch, getState) => {\n  \n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) return;\n\n  token.set(persistedToken);\n\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const { data } = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n    toast.error(error.message);\n  }\n};\n\n// eslint-disable-next-line\nexport default {\n  register,\n  logIn,\n  logOut,\n  getCurrentUser\n};\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = {\n  name: null,\n  email: null,\n};\n\n// Редюсер для реєстрації, авторизації та выходу з профіля\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\n// Редюсер для токенів\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\n// Редюсер для індикації авторизації\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n\n  [authActions.logoutSuccess]: () => false,\n});\n\n// Обработку помилок можна абстрагувати\n// const setError = (_, { payload }) => payload;\n\n// Редюсер для обробки помилок            \nconst error = createReducer(null, {\n  [authActions.registerError]: (_, { payload }) => payload,\n  [authActions.loginError]: (_, { payload }) => payload,\n  [authActions.logoutError]: (_, { payload }) => payload,\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  user,\n  token,\n  isAuthenticated,\n  error,\n});\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\nconst getUserEmail = state => state.auth.user.email;\n\n// eslint-disable-next-line\nexport default { getIsAuthenticated, getUserEmail };\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'; // Импорт функции создания хранилища и прослойки\nimport {\n    persistStore,\n    persistReducer,\n    \n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n    } from 'redux-persist'; // Імпорт функції персистерів і фікса консолі\nimport storage from 'redux-persist/lib/storage'; // Імпорт локального сховища\nimport logger from 'redux-logger'; // Імпорт логгера\n\nimport { authReducer } from './auth'; // Імпорт редюсера по авторизації\nimport { contactsReducer } from './contacts'; // Імпорт редюсера по контактам\n\n// Створення прослойок middleware + логгер. Важливий порядок!!!\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\n// Добавляет логгер только для продакшена\nif (process.env.NODE_ENV === `development`) {\n  middleware.push(logger);\n}\n\n// Конфиг персистора\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\n// Создание хранилища (корневой редюсер + прослойки + тулзы только для разработки)\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// Создание персистора\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line\nexport default { store, persistor };\n","import PropTypes from 'prop-types';\nimport styles from './Container.module.scss';\n\n// Компонент контейнера\nconst Container = ({ children }) => (\n  \n  <div className={styles.container}>\n    {children}\n  </div>\n);\n\nexport default Container;\n\nContainer.defaultProps = {\n  children: [],\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nimport { authSelectors } from '../../redux/auth';\nimport routes from '../../routes';\n\nimport styles from './Navigation.module.scss'; \n\n// Компонент навигації Bar-меню application(застосування)\nconst Navigation = ({ isAuthenticated }) => (\n  <nav>\n    <ul className={styles.list}>\n      <li className={styles.item}>\n        <NavLink\n          exact\n          to={routes.HOME}\n          className={styles.link}\n          activeClassName={styles['link--active']}\n        >\n          Home\n        </NavLink>\n      </li>\n\n      {isAuthenticated && (\n        <li>\n          <NavLink\n            to={routes.CONTACTS}\n            className={styles.link}\n            activeClassName={styles['link--active']}\n          >\n            Contacts\n          </NavLink>\n        </li>\n      )}\n    </ul>\n  </nav>\n);\n\nNavigation.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps, null)(Navigation);\n","import { NavLink } from 'react-router-dom';\nimport routes from '../../routes';\nimport styles from './AuthNav.module.scss';\n\n// Компонент меню реєстрації та авторизації\nconst AuthNav = () => (\n  <ul className={styles.list}>\n    <li className={styles.item}>\n      <NavLink\n        to={routes.REGISTRATION}\n        className={styles.link}\n        activeClassName={styles['link--active']}\n      >\n        Sign up\n      </NavLink>\n    </li>\n\n    <li className={styles.item}>\n      <NavLink\n        exact\n        to={routes.LOGIN}\n        className={styles.link}\n        activeClassName={styles['link--active']}\n      >\n        Log in\n      </NavLink>\n    </li>\n  </ul>\n);\n\nexport default AuthNav;\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\n\nimport styles from './UserMenu.module.scss';\n\n// Компонент Bar-меню користувача після авторизації\nconst UserMenu = ({ email, onLogOut }) => (    // or  name\n  \n  <div className={styles.profile}>\n    <div className={styles.thumb}>\n      <img\n        src={`https://eu.ui-avatars.com/api/?background=11329e&color=fff&&length=1&name=${email}`}\n        alt=\"avatar\"\n        title=\"Your avatar\"\n        className={styles.avatar}\n      />\n    </div>\n\n    <span className={styles.welcome}>\n      Welcome, <span className={styles.email}>{email}</span>\n    </span>\n   \n    \n    <button\n      type=\"button\"\n      title=\"Log out\"\n      aria-label=\"Log out\"\n      onClick={onLogOut}\n      className={styles.button}\n    >\n      Logout\n    </button>\n\n      {/* <AddTodoButton /> */}\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  email: authSelectors.getUserEmail(state),\n});\n\nconst mapDispatchToProps = {\n  onLogOut: authOperations.logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n\n\nUserMenu.propTypes = {\n  email: PropTypes.string.isRequired,\n  onLogOut: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { authSelectors } from '../../redux/auth';\n\nimport Navigation from '../Navigation';\nimport AuthNav from '../AuthNav';\nimport UserMenu from '../UserMenu';\n  \nimport styles from './AuthBar.module.scss';\n\n// // Компонент Bar/Header-меню application(застосування) реєстрації та авторизації\nconst AuthBar = ({ isAuthenticated }) => {\n  \n  return (\n    <header className={styles.header}>\n      <Navigation />\n\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps, null)(AuthBar);\n\n\nAuthBar.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n};","import { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\n/*\n * - Якщо маршрут і користувач logined, рендерить Component\n * - А інакше рендерить Redirect на вказаний роут: redirectTo\n */\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\n/*\n * - Якщо маршрут restricted/обмежений і користувач logined, то рендерить Redirect на вказаний роут: redirectTo\n * - А інакше рендерить компонент\n */\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import { Suspense, lazy, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Switch } from 'react-router-dom'; \n\nimport routes from './routes';\nimport { authOperations } from './redux/auth';\n\nimport Container from './components/Container';\nimport AuthBar from './components/AuthBar';\nimport Loader from './components/Loader';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\nimport { ToastContainer } from 'react-toastify';\n//import Alert from '@material-ui/lab/Alert';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst HomePage = lazy(() =>\n  import('./views/HomePage' /* webpackChunkName: \"home-page\" */),\n);\nconst RegistrationPage = lazy(() =>\n  import('./views/RegistrationPage' /* webpackChunkName: \"register-page\" */),\n);\nconst ContactsPage = lazy(() =>\n  import('./views/ContactsPage' /* webpackChunkName: \"contacts-page\" */),\n);\nconst LoginPage = lazy(() =>\n  import('./views/LoginPage' /* webpackChunkName: \"login-page\" */),\n);\nconst PageNotFound = lazy(() =>\n  import('./views/PageNotFound' /* webpackChunkName: \"404-page\" */),\n);\n\nconst App = ({ getCurrentUser }) => {\n  // Отримання поточного юзера при маунті application/застосування \n  useEffect(() => {\n    getCurrentUser();\n  }, [getCurrentUser]);\n\n  return (\n    <Container>\n      <AuthBar />\n\n      <Suspense fallback={<Loader />}>\n        <Switch>\n\n          <PublicRoute\n            exact path={routes.HOME}\n            component={HomePage} />\n\n          <PublicRoute\n            path={routes.REGISTRATION}\n            component={RegistrationPage}\n            restricted\n            redirectTo={routes.CONTACTS} />\n\n          <PublicRoute\n            path={routes.LOGIN}\n            component={LoginPage}\n            restricted\n            redirectTo={routes.CONTACTS} />\n\n          <PrivateRoute\n            path={routes.CONTACTS}\n            component={ContactsPage}\n            redirectTo={routes.LOGIN} />\n\n          <PublicRoute component={PageNotFound} />\n\n        </Switch>\n      </Suspense>\n\n      <ToastContainer autoClose={2000} />\n    </Container>\n  );\n};\n\nconst mapDispatchToProps = {\n  getCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { Provider } from 'react-redux'; // Імпорт провайдера для сховища/store\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store'; // Імпорт  об'єкта зі store/сховища\n\nimport App from './App.jsx';\nimport Loader from './components/Loader';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './App.module.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={<Loader />} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// eslint-disable-next-line\nexport default {\n// const routes = {\n  HOME: '/',\n  CONTACTS: '/contacts',\n  REGISTRATION: '/register',\n  LOGIN: '/login',\n};\n\n//export default routes;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"AuthNav_list__e9UWw\",\"item\":\"AuthNav_item__3AIUM\",\"link\":\"AuthNav_link__1dyB9\",\"link--active\":\"AuthNav_link--active__1_eV-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Navigation_list__FRzNY\",\"item\":\"Navigation_item__ByLrG\",\"link\":\"Navigation_link__171bT\",\"link--active\":\"Navigation_link--active__3gE5h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserMenu_profile__13KRh\",\"thumb\":\"UserMenu_thumb__o8pAI\",\"avatar\":\"UserMenu_avatar__22RHf\",\"welcome\":\"UserMenu_welcome__zPZu5\",\"email\":\"UserMenu_email__33kkH\",\"button\":\"UserMenu_button__2HUwx\"};","import Spinner from 'react-loader-spinner';\nimport styles from './Loader.module.scss';\n\n//  Компонент  Spinner\nexport default function Loader() {\n  return (\n    \n    <div className={styles.loader}>\n      <Spinner\n        role=\"alert\"          \n        type=\"Circles\"\n        color=\"#00BFFF\"\n        width={40}\n        height={40}\n      />\n    </div>\n  );\n}\n\n\n\n// const Loader = () => (\n//   <div className={styles.loader}>\n  \n//   </div>\n// );\n\n// export default Loader;","import { combineReducers } from '@reduxjs/toolkit'; // Імпорт функції combineReducers   combine reducers\nimport { createReducer } from '@reduxjs/toolkit'; // Імпорт функції createReducer створення редюсера\nimport actions from './contacts-actions'; // Імпорт actions в редюсери  з contacts-actions\n\n\n// const initialContacts = [\n//   { id: \"id-1\", name: \"Rosie Simpson\", number: \"+38-044-459-1256\" },\n//   { id: \"id-2\", name: \"Hermione Kline\", number: \"+38-041-443-8912\" },\n//   { id: \"id-3\", name: \"Eden Clements\", number: \"+38-048-645-1779\" },\n//   { id: \"id-4\", name: \"Annie Copeland\", number: \"+38-042-227-9126\" },\n// ];\n\n\n// Створення редюсера для масива items в контактах (фетч усіх контактів, додавння і видалення контакта)\nconst items = createReducer([], {\n// const contacts = createReducer(initialContacts, {\n  [actions.fetchContactsSuccess]: (_, { payload }) =>\n    payload.sort((a, b) => a.name.localeCompare(b.name)),\n  [actions.addContactSuccess]: (state, { payload }) => [payload, ...state],\n  [actions.deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\n// Створення редюсера для фільтра в контактах\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\n// Створення редюсера індикації загрузки\nconst loading = createReducer(false, {\n  [actions.fetchContactsRequest]: () => true,\n  [actions.fetchContactsSuccess]: () => false,\n  [actions.fetchContactsError]: () => false,\n\n  [actions.addContactRequest]: () => true,\n  [actions.addContactSuccess]: () => false,\n  [actions.addContactError]: () => false,\n\n  [actions.deleteContactRequest]: () => true,\n  [actions.deleteContactSuccess]: () => false,\n  [actions.deleteContactError]: () => false,\n});\n\n\n// Створення редюсера обробки помилок\nconst error = createReducer(null, {\n  [actions.fetchContactsError]: (_, { payload }) => payload,\n  [actions.addContactError]: (_, { payload }) => payload,\n  [actions.deleteContactError]: (_, { payload }) => payload,\n\n  [actions.fetchContactsRequest]: () => null,\n  [actions.fetchContactsSuccess]: () => null,\n\n  [actions.addContactRequest]: () => null,\n  [actions.addContactSuccess]: () => null,\n\n  [actions.deleteContactRequest]: () => null,\n  [actions.deleteContactSuccess]: () => null,\n});\n\n// Експорт усіх редюсерів через комбайн\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error\n});\n","import { createAction } from '@reduxjs/toolkit'; // Імпорт функції create аction  з   toolkit\n\n// create аctions для отримання списка контактів\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest',);\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess',);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\n// create аctions для отримання додавання контактів\nconst addContactRequest = createAction('contacts/addContactsRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\n// create аctions для отримання видалення контактів\nconst deleteContactRequest = createAction('contacts/deleteContactsRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\n// create аctions для фільтра\nconst changeFilter = createAction('contacts/change-filter');\n\n// eslint-disable-next-line\nexport default {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n\n  changeFilter,\n};\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nimport actions from './contacts-actions'; // Імпорт  аctions в операції  з  контактів-аctions\n\n\n//axios.defaults.baseURL = 'http://localhost:4040';\n\n\n/** Асинхронна операція Отримання списка контактів: запит, dispatch actions отримання */\nconst fetchContacts = () => async dispatch => {\n  dispatch(actions.fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n\n    dispatch(actions.fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(actions.fetchContactsError(error.message));\n    toast.error(error.message);\n  }\n};\n/** Асинхронна операція Додавання контакта: пройом даних з форми, запит, dispatch actions додавання */\nconst addContact = (name, number) => async dispatch => {\n  const contact = { name, number };\n\n  dispatch(actions.addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', contact);\n\n    toast.success('Added');\n    dispatch(actions.addContactSuccess(data));\n  } catch (error) {\n    dispatch(actions.addContactError(error.message));\n    toast.error(error.message);\n  }\n};\n/** Асинхронна операція Видалення контакта: пройом id, запит, dispatch actions видалення */\nconst deleteContact = id => async dispatch => {\n  dispatch(actions.deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${id}`);\n\n    toast.success('Deleted');\n    dispatch(actions.deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(actions.deleteContactError(error.message));\n    toast.error(error.message);\n  }\n};\n\n// eslint-disable-next-line\nexport default {\n  fetchContacts,\n  addContact,\n  deleteContact\n};\n","import { createSelector } from '@reduxjs/toolkit'; // Імпорт функції Selector для мемоізації селектора з toolkit \n\nconst getLoading = state => state.contacts.loading;\nconst getFilter = state => state.contacts.filter;\nconst getContacts = state => state.contacts.items;\n  console.log('getContacts', getContacts);\nconst getError = state => state.contacts.error;\n\n// Мемоізація функції фільтра контактів на базі композитного селектора\nconst getfilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\n// Композитний селектор для фільтра контактів (варіант без мемоізації)\n// export const getfilteredContacts = state => {\n//   const contacts = getContacts(state);\n//   const filter = getFilter(state);\n\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return contacts.filter(({ name }) =>\n//     name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\n\n// eslint-disable-next-line\nexport default {  \n  getLoading,\n  getFilter,\n  getContacts,\n  getError,\n  getfilteredContacts,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__25Fid\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AuthBar_header__3Plca\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2PpUe\"};"],"sourceRoot":""}